{"ast":null,"code":"import { action, makeObservable, observable } from 'mobx';\n\nclass Store {\n  constructor() {\n    this.allTask = [];\n\n    this.input = inp => {\n      let allTask = this.allTask;\n      console.log(allTask);\n      return allTask.push({\n        id: allTask.length,\n        title: inp\n      });\n    };\n\n    this.delete = id => {\n      let allTask = this.allTask;\n\n      for (let i = 0; i < allTask.length; i++) {\n        if (allTask[i].id === id) allTask.splice(i, 1);\n      }\n\n      return console.log(allTask);\n    };\n\n    makeObservable(this, {\n      allTask: observable,\n      input: action.bound\n    });\n  }\n\n}\n\nexport default new Store();","map":{"version":3,"sources":["C:/Users/vakha/OneDrive/Рабочий стол/WebDevReact/css/store/store/src/store.js"],"names":["action","makeObservable","observable","Store","constructor","allTask","input","inp","console","log","push","id","length","title","delete","i","splice","bound"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,cAAhB,EAAgCC,UAAhC,QAAiD,MAAjD;;AAEA,MAAMC,KAAN,CAAY;AAEVC,EAAAA,WAAW,GAAG;AAAA,SADdC,OACc,GADJ,EACI;;AAAA,SAMdC,KANc,GAMLC,GAAD,IAAS;AACf,UAAIF,OAAO,GAAG,KAAKA,OAAnB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,aAAOA,OAAO,CAACK,IAAR,CAAa;AAACC,QAAAA,EAAE,EAAEN,OAAO,CAACO,MAAb;AAAqBC,QAAAA,KAAK,EAAEN;AAA5B,OAAb,CAAP;AACD,KAVa;;AAAA,SAWdO,MAXc,GAWJH,EAAD,IAAQ;AACf,UAAIN,OAAO,GAAG,KAAKA,OAAnB;;AACA,WAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,OAAO,CAACO,MAA5B,EAAoCG,CAAC,EAArC,EAAyC;AACvC,YAAGV,OAAO,CAACU,CAAD,CAAP,CAAWJ,EAAX,KAAkBA,EAArB,EACEN,OAAO,CAACW,MAAR,CAAeD,CAAf,EAAiB,CAAjB;AACH;;AACD,aAAOP,OAAO,CAACC,GAAR,CAAYJ,OAAZ,CAAP;AACD,KAlBa;;AACZJ,IAAAA,cAAc,CAAC,IAAD,EAAO;AACnBI,MAAAA,OAAO,EAAEH,UADU;AAEnBI,MAAAA,KAAK,EAAEN,MAAM,CAACiB;AAFK,KAAP,CAAd;AAID;;AAPS;;AAuBZ,eAAe,IAAId,KAAJ,EAAf","sourcesContent":["import {action, makeObservable, observable} from 'mobx';\r\n\r\nclass Store {\r\n  allTask = [];\r\n  constructor() {\r\n    makeObservable(this, {\r\n      allTask: observable,\r\n      input: action.bound\r\n    })\r\n  }\r\n  input = (inp) => {\r\n    let allTask = this.allTask\r\n    console.log(allTask)\r\n    return allTask.push({id: allTask.length, title: inp})\r\n  }\r\n  delete = (id) => {\r\n    let allTask = this.allTask\r\n    for (let i = 0; i < allTask.length; i++) {\r\n      if(allTask[i].id === id)\r\n        allTask.splice(i,1)\r\n    }\r\n    return console.log(allTask)\r\n  }\r\n}\r\n\r\nexport default new Store()"]},"metadata":{},"sourceType":"module"}